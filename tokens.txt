DIGITS = '0123456789'
ALPHABETS ='ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'
SPECIALCHARACTERS ='!@#$%^&|~`+-*/\\='

KeyWord             = ['static', 'enum', 'return', 'break', 'continue']
DataType            = ['int', 'float', 'string', 'char', 'bool', 'var']
loops               = ['for', 'while']
conditional         = ['if', 'else']
booll               = ['True', 'False']
Access_Modifiers    = ['public', 'private','protected']
Type_Modifers       = ['virtual','override']
Logical_Operator    = ['and', 'or', 'not']
puntuators          = [';', ',', '\n', ':', '[', ']', '{', '}', '(', ')', '.']

# def Search_For_KeyWord(n):
#     for i in range(len(KeyWord)):
#         if KeyWord[i] == n:
#             return True
#     return False

###################
# TOKEN
###################

TT_CLASS                 = 'Class'
TT_ENDMARKER             = 'EndMarker'
TT_METH                  = 'Meth'
TT_NEW                   = 'new'

TT_ACESSOR               = 'Acessor'
TT_SCOPERESOLUTION       = 'ScopeResolution'
TT_INHERITANCE_INITIATOR = 'inheritant initiator'

TT_KW           = 'KeyWord'
TT_DT           = 'DataType'
TT_lOOPS        = 'Loop'
TT_CONDTIONAL   = 'conditional'
TT_ACESSORMOD   = 'Access_Modifiers'
TT_TYPEMOD      = 'Type_Modifers'
TT_LOGICALOP    = 'Logical_Operator'
TT_ID           = 'Variable'


TT_STRING   = "STRING"
TT_CHAR     = 'CHAR'
TT_BOOL     = 'Boolean'

TT_INT		= 'INT_Number'
TT_FLOAT    = 'FLOAT_Number'

TT_PLUS     = 'PLUS'
TT_MINUS    = 'MINUS'
TT_MUL      = 'MUL'
TT_DIV      = 'DIV'
TT_MOD      = 'Mod'


TT_ASSIGNMENTOP        = 'AssignmentOperator'
# TT_EqualsTo          = 'Equals'
# TT_PlusEquals        = 'PlusEquals'
# TT_MinEquals         = 'MinEquals'
# TT_MulEquals         = 'MulEquals'
# TT_DivEquals         = 'DivEquals'
# TT_ModEquals         = 'ModEquals'


TT_RELATIONALOP     = 'RelationalOperator'
# TT_GreaterThan      = 'Greater'
# TT_LessThan         = 'Lesser'
# TT_GreaterEqual     = 'GreaterThanEqualTo'
# TT_LesserEqual      = 'LesserThanEqualTo'
# TT_DoubleEquals     = 'DoubleEquals'
# TT_NotEquals        = 'NotEqualsTo'
TT_NOT              = 'NOT'

TT_LPARENR   = 'LPARENRound'
TT_RPARENR   = 'RPARENRound'

TT_LPARENC   = 'LPARENCurly'
TT_RPARENC   = 'RPARENCurly'

TT_LPARENS   = 'LPARENSquare'
TT_RPARENS   = 'RPARENSquare'

TT_TERMINATOR = 'Terminator'
TT_SEPARATOR  = 'Separator'